{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","title","isSelectedTab","classNames","href","onClick","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GACT,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MACNC,EAAgBP,EAAYG,KAAOA,EAEzC,OACE,oBACEC,UAAWI,IAAW,CACpB,YAAaD,IAEf,UAAQ,MAJV,SAOE,mBACEE,KAAI,WAAMN,GACV,UAAQ,UACRO,QAAS,WACFH,GACHR,EAAcG,IALpB,SASGI,KAXEH,UAkBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,cC3CRd,EAAc,CACzB,CAAEM,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,oBAAS,UAAAhB,EAAK,UAAL,eAASM,KAAM,IAAlE,mBAAOL,EAAP,KAAsBgB,EAAtB,KACQR,GAAUT,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,IAA7DS,MAMR,OACE,sBAAKF,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBE,KAEtB,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeA,EACfC,cAZgB,SAACG,GACrBY,EAAiBZ,EAAIC,WCfzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9e39405a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n            const isSelectedTab = selectedTab.id === id;\n\n            return (\n              <li\n                className={classNames({\n                  'is-active': isSelectedTab,\n                })}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (!isSelectedTab) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './types/Tab';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0]?.id || '');\n  const { title } = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
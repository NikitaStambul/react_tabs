{"version":3,"sources":["helpers/findTabById.ts","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["findTabById","tabs","id","find","tab","Tabs","selectedTabId","onTabSelected","selectedTab","className","map","title","isSelectedTab","classNames","href","onClick","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"2MAEO,SAASA,EAAYC,EAAaC,GACvC,OAAOD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIF,KAAOA,MAAOD,EAAK,G,WCQpCI,EAAwB,SAAC,GAI/B,IAHLJ,EAGI,EAHJA,KACAK,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcR,EAAYC,EAAMK,GAEtC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKG,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAACN,GACT,IAAQF,EAAcE,EAAdF,GAAIS,EAAUP,EAAVO,MACNC,EAAgBJ,EAAYN,KAAOA,EAEzC,OACE,oBACEO,UAAWI,IAAW,CACpB,YAAaD,IAEf,UAAQ,MAJV,SAOE,mBACEE,KAAI,WAAMZ,GACV,UAAQ,UACRa,QAAS,WACFH,GACHL,EAAcH,IALpB,SASGO,KAXET,UAkBf,qBAAKO,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYQ,cC3CRf,EAAc,CACzB,CAAEC,GAAI,QAASS,MAAO,QAASK,QAAS,eACxC,CAAEd,GAAI,QAASS,MAAO,QAASK,QAAS,eACxC,CAAEd,GAAI,QAASS,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,oBAAS,UAAAjB,EAAK,UAAL,eAASC,KAAM,IAAlE,mBAAOI,EAAP,KAAsBa,EAAtB,KACQR,EAAUX,EAAYC,EAAMK,GAA5BK,MAMR,OACE,sBAAKF,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBE,KAEtB,cAAC,EAAD,CACEV,KAAMA,EACNK,cAAeA,EACfC,cAZkB,SAACH,GACvBe,EAAiBf,EAAIF,WChBzBkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.39771127.chunk.js","sourcesContent":["import { Tab } from '../types/Tab';\n\nexport function findTabById(tabs: Tab[], id: string): Tab {\n  return tabs.find(tab => tab.id === id) || tabs[0];\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { findTabById } from '../../helpers/findTabById';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = findTabById(tabs, selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n            const isSelectedTab = selectedTab.id === id;\n\n            return (\n              <li\n                className={classNames({\n                  'is-active': isSelectedTab,\n                })}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (!isSelectedTab) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './types/Tab';\nimport { Tabs } from './components/Tabs';\nimport { findTabById } from './helpers/findTabById';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0]?.id || '');\n  const { title } = findTabById(tabs, selectedTabId);\n\n  const handleSelectTab = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleSelectTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}